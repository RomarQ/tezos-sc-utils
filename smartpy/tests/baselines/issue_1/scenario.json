[
 {
  "shortname": "issue_1_test",
  "longname": "issue_1_test",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"smartpy/tests/issue_1.py\" 19) static_id 0) \nstorage ((\"smartpy/tests/issue_1.py\" 7) record )\nstorage_type (())\nentry_points ((test True None None None False None (\"smartpy/tests/issue_1.py\" 10) (((\"smartpy/utils.py\" 339) define_local \"utils_0\" ((\"smartpy/utils.py\" 339) size ((\"smartpy/tests/issue_1.py\" 11) literal (bytes \"0xFF\"))) True) ((\"smartpy/utils.py\" 340) define_local \"utils_1\" ((\"smartpy/utils.py\" 340) literal (nat 0)) True) ((\"smartpy/utils.py\" 341) for_group \"utils_2\" ((\"smartpy/utils.py\" 341) range ((\"smartpy/utils.py\" 341) literal (intOrNat 0)) ((\"smartpy/utils.py\" 341) get_local \"utils_0\") ((\"smartpy/utils.py\" 341) literal (intOrNat 1))) (((\"smartpy/utils.py\" 342) define_local \"compute_utils_342\" ((\"smartpy/utils.py\" 342) open_variant ((\"smartpy/utils.py\" 342) slice ((\"smartpy/utils.py\" 341) iter \"utils_2\") ((\"smartpy/utils.py\" 342) literal (intOrNat 1)) ((\"smartpy/tests/issue_1.py\" 11) literal (bytes \"0xFF\"))) \"Some\" ((\"\" -1) literal (unit))) True) ((\"smartpy/utils.py\" 343) define_local \"compute_utils_343\" ((\"smartpy/utils.py\" 343) mul_homo ((\"smartpy/utils.py\" 343) open_variant ((\"smartpy/utils.py\" 343) is_nat ((\"smartpy/utils.py\" 343) sub ((\"smartpy/utils.py\" 343) get_local \"utils_0\") ((\"smartpy/utils.py\" 343) add ((\"smartpy/utils.py\" 341) iter \"utils_2\") ((\"smartpy/utils.py\" 343) literal (intOrNat 1))))) \"Some\" \"None\") ((\"smartpy/utils.py\" 343) literal (intOrNat 2))) True) ((\"smartpy/utils.py\" 349) set ((\"smartpy/tests/issue_1.py\" 19) get_local \"utils_1\") ((\"smartpy/utils.py\" 349) add ((\"smartpy/utils.py\" 349) get_local \"utils_1\") ((\"smartpy/utils.py\" 349) mul_homo ((\"smartpy/utils.py\" 349) open_variant ((\"smartpy/utils.py\" 349) is_nat ((\"smartpy/utils.py\" 350) to_int ((\"smartpy/utils.py\" 350) open_variant ((\"smartpy/utils.py\" 350) unpack ((\"smartpy/utils.py\" 348) add ((\"smartpy/utils.py\" 348) add ((\"smartpy/utils.py\" 348) literal (bytes \"0x050a00000020\")) ((\"smartpy/utils.py\" 342) get_local \"compute_utils_342\")) ((\"smartpy/utils.py\" 348) literal (bytes \"0x00000000000000000000000000000000000000000000000000000000000000\"))) \"bls12_381_fr\") \"Some\" ((\"\" -1) literal (unit))))) \"Some\" \"None\") ((\"smartpy/utils.py\" 9) call_michelson (op \"\n            DUP;\n            PUSH nat 0;\n            COMPARE;\n            NEQ;\n            LOOP\n            {\n                PUSH nat 0;\n                PUSH nat 2;\n                DUP 3;\n                EDIV;\n                IF_NONE\n                {\n                    UNIT;\n                    FAILWITH;\n                }\n                {\n                    CDR;\n                };\n                COMPARE;\n                NEQ;\n                IF\n                {\n                    SWAP;\n                    DUP;\n                    DUG 2;\n                    DIG 3;\n                    MUL;\n                    DUG 2;\n                }\n                {};\n                PUSH nat 1;\n                SWAP;\n                LSR;\n                SWAP;\n                DUP;\n                MUL;\n                SWAP;\n                DUP;\n                PUSH nat 0;\n                COMPARE;\n                NEQ;\n            };\n            DROP 2;\n            \" \"nat\" \"nat\" \"nat\" \"out\" \"nat\") ((\"smartpy/utils.py\" 343) get_local \"compute_utils_343\") ((\"smartpy/utils.py\" 9) literal (intOrNat 16)) ((\"smartpy/utils.py\" 9) literal (intOrNat 1)))))))) ((\"smartpy/tests/issue_1.py\" 11) verify ((\"smartpy/tests/issue_1.py\" 11) eq ((\"smartpy/utils.py\" 353) get_local \"utils_1\") ((\"smartpy/tests/issue_1.py\" 11) literal (intOrNat 255)))) ((\"smartpy/utils.py\" 339) define_local \"utils_3\" ((\"smartpy/utils.py\" 339) size ((\"smartpy/tests/issue_1.py\" 12) literal (bytes \"0xFFFF\"))) True) ((\"smartpy/utils.py\" 340) define_local \"utils_4\" ((\"smartpy/utils.py\" 340) literal (nat 0)) True) ((\"smartpy/utils.py\" 341) for_group \"utils_5\" ((\"smartpy/utils.py\" 341) range ((\"smartpy/utils.py\" 341) literal (intOrNat 0)) ((\"smartpy/utils.py\" 341) get_local \"utils_3\") ((\"smartpy/utils.py\" 341) literal (intOrNat 1))) (((\"smartpy/utils.py\" 342) define_local \"compute_utils_342\" ((\"smartpy/utils.py\" 342) open_variant ((\"smartpy/utils.py\" 342) slice ((\"smartpy/utils.py\" 341) iter \"utils_5\") ((\"smartpy/utils.py\" 342) literal (intOrNat 1)) ((\"smartpy/tests/issue_1.py\" 12) literal (bytes \"0xFFFF\"))) \"Some\" ((\"\" -1) literal (unit))) True) ((\"smartpy/utils.py\" 343) define_local \"compute_utils_343\" ((\"smartpy/utils.py\" 343) mul_homo ((\"smartpy/utils.py\" 343) open_variant ((\"smartpy/utils.py\" 343) is_nat ((\"smartpy/utils.py\" 343) sub ((\"smartpy/utils.py\" 343) get_local \"utils_3\") ((\"smartpy/utils.py\" 343) add ((\"smartpy/utils.py\" 341) iter \"utils_5\") ((\"smartpy/utils.py\" 343) literal (intOrNat 1))))) \"Some\" \"None\") ((\"smartpy/utils.py\" 343) literal (intOrNat 2))) True) ((\"smartpy/utils.py\" 349) set ((\"smartpy/tests/issue_1.py\" 19) get_local \"utils_4\") ((\"smartpy/utils.py\" 349) add ((\"smartpy/utils.py\" 349) get_local \"utils_4\") ((\"smartpy/utils.py\" 349) mul_homo ((\"smartpy/utils.py\" 349) open_variant ((\"smartpy/utils.py\" 349) is_nat ((\"smartpy/utils.py\" 350) to_int ((\"smartpy/utils.py\" 350) open_variant ((\"smartpy/utils.py\" 350) unpack ((\"smartpy/utils.py\" 348) add ((\"smartpy/utils.py\" 348) add ((\"smartpy/utils.py\" 348) literal (bytes \"0x050a00000020\")) ((\"smartpy/utils.py\" 342) get_local \"compute_utils_342\")) ((\"smartpy/utils.py\" 348) literal (bytes \"0x00000000000000000000000000000000000000000000000000000000000000\"))) \"bls12_381_fr\") \"Some\" ((\"\" -1) literal (unit))))) \"Some\" \"None\") ((\"smartpy/utils.py\" 9) call_michelson (op \"\n            DUP;\n            PUSH nat 0;\n            COMPARE;\n            NEQ;\n            LOOP\n            {\n                PUSH nat 0;\n                PUSH nat 2;\n                DUP 3;\n                EDIV;\n                IF_NONE\n                {\n                    UNIT;\n                    FAILWITH;\n                }\n                {\n                    CDR;\n                };\n                COMPARE;\n                NEQ;\n                IF\n                {\n                    SWAP;\n                    DUP;\n                    DUG 2;\n                    DIG 3;\n                    MUL;\n                    DUG 2;\n                }\n                {};\n                PUSH nat 1;\n                SWAP;\n                LSR;\n                SWAP;\n                DUP;\n                MUL;\n                SWAP;\n                DUP;\n                PUSH nat 0;\n                COMPARE;\n                NEQ;\n            };\n            DROP 2;\n            \" \"nat\" \"nat\" \"nat\" \"out\" \"nat\") ((\"smartpy/utils.py\" 343) get_local \"compute_utils_343\") ((\"smartpy/utils.py\" 9) literal (intOrNat 16)) ((\"smartpy/utils.py\" 9) literal (intOrNat 1)))))))) ((\"smartpy/tests/issue_1.py\" 12) verify ((\"smartpy/tests/issue_1.py\" 12) eq ((\"smartpy/utils.py\" 353) get_local \"utils_4\") ((\"smartpy/tests/issue_1.py\" 12) literal (intOrNat 65535)))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"smartpy/tests/issue_1.py\" 19) static_id 0)",
    "line_no": "(\"smartpy/tests/issue_1.py\" 19)",
    "show": true
   },
   {
    "action": "message",
    "id": "((\"smartpy/tests/issue_1.py\" 19) static_id 0)",
    "line_no": "(\"smartpy/tests/issue_1.py\" 21)",
    "message": "test",
    "params": "((\"smartpy/tests/issue_1.py\" 21) record )"
   }
  ],
  "kind": "test"
 }
]